// MEDIA QUERY
@mixin mq($breakpoint) {
  @if $breakpoint == tablet {
    @media only screen and (min-width: 48em) {
      @content;
    }
  }
  @if $breakpoint == desktop {
    @media only screen and (min-width: 62em) {
      @content;
    }
  }
}

// COMPONENT STYLES
@mixin container-styles {
  max-width: 111rem;
  margin: 0 auto;
  padding-left: var(--space-6);
  padding-right: var(--space-6);

  @include mq(tablet) {
    padding-left: var(--space-8);
    padding-right: var(--space-8);
  }
}

@mixin grid-styles {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
}

@mixin heading-styles($variant) {
  font-weight: var(--font-weight-bold);
  color: var(--color-heading);

  @if $variant == h1 {
    font-size: var(--font-size-h1);
    line-height: var(--line-height-h1);
  }

  @if $variant == h2 {
    font-size: var(--font-size-h2);
    line-height: var(--line-height-h2);
  }

  @if $variant == h3 {
    font-size: var(--font-size-h3);
    line-height: var(--line-height-h3);
  }

  @if $variant == h4 {
    font-size: var(--font-size-h4);
    line-height: var(--line-height-h4);
    color: var(--color-primary);
  }
}

@mixin button-styles($variant, $size: default, $type: default) {
  &,
  &:link,
  &:visited {
    font-family: inherit;
    font-size: inherit;
    font-weight: var(--font-weight-bold);
    border: none;
    border-radius: 0.5rem;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.2s;
    display: flex;
    justify-content: center;
    align-items: center;

    @if $variant == primary {
      background-color: var(--color-primary-button-background);
      color: var(--color-primary-button-text);

      &:hover,
      &:active {
        background-color: var(--color-primary-button-background-hover);
      }
    }

    @if $variant == secondary {
      color: var(--color-secondary-button-text);

      @if $type == default {
        background-color: var(--color-secondary-button-background);

        &:hover,
        &:active {
          background-color: var(--color-secondary-button-background-hover);
        }
      }

      @if $type == icon {
        background-color: transparent;
      }
    }

    @if $size == full {
      width: 100%;

      @include mq(tablet) {
        width: auto !important;
      }
    }

    @if $type == default {
      padding: var(--space-3) var(--space-7);
    }

    @if $type == icon {
      padding: 0;
      width: 4.8rem;
      height: 4.8rem;
    }
  }
}

@mixin input-styles {
  font-family: inherit;
  font-size: inherit;
  background-color: inherit;
  color: inherit;
  border: none;

  &:focus-visible {
    outline: none;
  }
}

@mixin checkbox-styles {
  input {
    opacity: 0;
    height: 0;
    width: 0;

    &:hover {
      ~ .checkbox {
        background-color: var(--color-secondary-button-background-hover);
      }
    }

    &:checked {
      ~ .checkbox {
        background-color: var(--color-primary);

        .checkbox-icon {
          display: block;
        }
      }
    }
  }

  .checkbox {
    height: 2.4rem;
    width: 2.4rem;
    border-radius: 0.3rem;
    background-color: var(--color-secondary-button-background);
    transition: all 0.15s;
    display: flex;
    justify-content: center;
    align-items: center;

    .checkbox-icon {
      display: none;
    }
  }
}
